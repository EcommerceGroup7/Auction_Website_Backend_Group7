# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Catalog {
  Catalog_ID: String!
  Catalog_Name: String!
  Catalog_Image_Url: String
  children: [Catalog!]
  Catalog_Id_Ref: Catalog
  isOpened: Boolean
  Product: [Product!]
}

type ProductImage {
  Product_Image_ID: String!
  Product_ID: Product!
  Product_Image_Url: String!
}

type Product {
  Product_ID: String!
  Product_Name: String!
  Weight: Float!
  Price: Float!
  User_Note: String
  Product_Info: String
  User_ID: User!
  Catalog_ID: Catalog!
  ProductImage: ProductImage
  Product_Image: [ProductImage!]!
}

type AuctionField {
  Auction_Field_ID: String!
  Start_Time: DateTime!
  End_Time: DateTime!
  Discount_Circle: Int!
  isOperation: Boolean!
  totalProduct: Int
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type UserBid {
  User: User
  Product_Auction: ProductAuction
  Price: Float
  Time: DateTime
}

type ProductAuction {
  Product_Auction_ID: String!
  Weight: Float!
  Starting_Price: Float!
  Discount_Rate: Float!
  Current_Price: Float!
  Product_ID: Product!
  Auction_Field_ID: AuctionField!
  User_ID: User
  isSold: Boolean!
  status: String
}

type Payment {
  Payment_ID: String!
  Order: Order!
  Total: Float!
  Payment_Method: String!
  User_ID: User!
}

type Order {
  Order_ID: String!
  Total_Price: Float!
  Status: Boolean
  User_ID: User!
  Product_Auction_ID: ProductAuction!
  Address_ID: Address
  Payment_ID: Payment
}

type Address {
  Address_ID: String!
  Reciever_Name: String
  Phone: String!
  Address_Name: String!
  Address_District: String!
  District_ID: Int
  User_ID: User!
  Order: Order!
}

type CurrencyLog {
  Currency_Log_ID: String!
  Currency_Log_Value: String!
  Total_Amount: Float!
  Time: DateTime!
  Currency: Currency!
}

type Currency {
  Currency_ID: String!
  Total_Money: Float!
  User_ID: User
}

type User {
  User_ID: String!
  User_First_Name: String!
  User_Last_Name: String!
  User_Name: String!
  Email: String!
  Phone: String
  Otp: String
  ResetPasswordOtp: String
  User_Image_Url: String
  Shop_Name: String
  isAdmin: Boolean
  isActive: Boolean
  isConfirmEmail: Boolean
  Address: [Address!]!
  Default_Address_ID: Address!
}

type WeightFee {
  Weight_Fee_ID: String!
  Weight_From: Float!
  Weight_To: Float!
  Fee: Float!
}

type DeliveryFee {
  Delivery_Fee_ID: String!
  Address_District: String!
  Fee: Float!
}

type IJwtPayload {
  id: String
}

type JwtPayload {
  accessToken: String
  userId: IJwtPayload
  userInfo: User
}

type TotalOrderResult {
  total: Float
  weight: Float
  Address_ID: Address
}

type AdminProductResult {
  totalProduct: Int
  ordered: Int
  sold: Int
  selling: Int
}

type Query {
  getUserByEmail(Email: String!): User!
  getAllUser: [User!]!
  getUserById(User_ID: String!): User!
  getCurrentByUser(User_ID: String!): Currency!
  getLastCurrencyLog(User_ID: String!): [CurrencyLog!]!
  getCurrencyLog: [CurrencyLog!]!
  getAllProduct(paginationInput: PaginationInput!): [Product!]!
  getProductByCatalogName(Catalog_Name: String!): [Product!]!
  getProductById(Product_ID: String!): Product!
  getSimilarProduct(Product_ID: String!): [Product!]!
  getProductByUser(User_ID: String!): [Product!]!
  searchProduct(searchProductInput: SearchProductInput!): [Product!]!
  getPopulateCatalog: [Catalog!]!
  getListCatalog: [Catalog!]!
  getSubCatalogByName(Catalog_Name: String!): [Catalog!]!
  deliveryFee(id: Int!): DeliveryFee!
  getUserOrder(User_ID: String!): [Order!]!
  userOrderTotal(User_ID: String!): TotalOrderResult!
  getUserOrderHistory(User_ID: String!): [Order!]!
  getCurrentBid(getCurrentBidInput: GetCurrentBidInput!): UserBid!
  getUserBidding(User_ID: String!): [UserBid!]!
  getWinnerBid(Product_Auction_ID: String!): UserBid!
  getProductAuctionById(Product_Auction_ID: String!): ProductAuction!
  getMinTimeToDiscount: Float!
  getSimilartProductAuction(Product_Auction_ID: String!): [ProductAuction!]!
  getAuctioningProduct: [ProductAuction!]!
  getAuctioningProductByCatalog(Catalog_Name: String!): [ProductAuction!]!
  searchAuctioningProduct(Product_Name: String!): [ProductAuction!]!
  getAdminProductCount: AdminProductResult!
  getAdminProductInfo: [ProductAuction!]!
  getFieldTotalProduct: [AuctionField!]!
  adminDashboardSales: [ProductAuction!]!
  adminDashBoardAuction: [AuctionField!]!
  getOperatingAuctionField: [AuctionField!]!
  getAvailableAuctionField: [AuctionField!]!
  getAllAuctionField: [AuctionField!]!
  getLastestPayment(Payment_ID: String!): Payment!
}

input PaginationInput {
  limit: Int!
  offset: Int!
}

input SearchProductInput {
  limit: Int!
  offset: Int!
  keywords: String!
}

input GetCurrentBidInput {
  Product_Auction_ID: String!
  User_ID: String!
}

type Mutation {
  updateUserInfo(updateUserInput: UpdateUserInput!): User!
  rechargeMoney(amount: Float!): Currency!
  createAddress(createAddressInput: CreateAddressInput!): Address!
  createProduct(createProductInput: CreateProductInput!): Boolean!
  createCatalog(createCatalogInput: CreateCatalogInput!): Catalog!
  createWeightFee(createWeightFeeInput: CreateWeightFeeInput!): WeightFee!
  createDeliveryFee(createDeliveryFeeInput: CreateDeliveryFeeInput!): DeliveryFee!
  updateDeliveryFee(updateDeliveryFeeInput: UpdateDeliveryFeeInput!): DeliveryFee!
  removeDeliveryFee(id: Int!): DeliveryFee!
  orderProductAuction(Product_Auction_ID: String!): Order!
  createUserBid(createUserBidInput: CreateUserBidInput!): UserBid!
  createProductAuction(CreateProductAuctionInput: CreateProductAuctionInput!): ProductAuction!
  createAuctionField(createAuctionFieldInput: CreateAuctionFieldInput!): AuctionField!
  createPayment(createPaymentInput: CreatePaymentInput!): Payment!
  signup(signupUserInput: SignupUserInput!): JwtPayload!
  login(loginUserInput: LoginUserInput!): JwtPayload!
  forgotPassword(email: String!): Boolean!
  resetPassword(resetPasswordInput: ResetPasswordInput!): Boolean!
  activeOtp(activeOtpInput: ActiveOtpInput!): Boolean!
  resendOtp(User_ID: String!): Boolean!
}

input UpdateUserInput {
  """Example field (placeholder)"""
  exampleField: Int
  User_First_Name: String = null
  User_Last_Name: String = null
  Phone: String = null
  Shop_Name: String = null
}

input CreateAddressInput {
  Address_Name: String!
  Address_District: String!
  District_ID: Int!
  Reciever_Name: String!
  Phone: String!
}

input CreateProductInput {
  Product_Image: [Upload!] = null
  Product_Name: String!
  Weight: Float!
  Price: Float!
  User_Note: String = null
  Product_Info: String = null
  Catalog_ID: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input CreateCatalogInput {
  Catalog_Name: String!
  image: Upload = null
  Catalog_Id_Ref: String = null
}

input CreateWeightFeeInput {
  Weight_From: Float!
  Weight_To: Float!
  Fee: Float!
}

input CreateDeliveryFeeInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateDeliveryFeeInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateUserBidInput {
  Product_Auction_ID: String!
  Price: Float!
}

input CreateProductAuctionInput {
  Weight: Float!
  Starting_Price: Float!
  Discount_Rate: Int!
  Product_ID: String!
  Auction_Field_ID: String!
}

input CreateAuctionFieldInput {
  Start_Time: DateTime!
  End_Time: DateTime!
  Discount_Circle: Int!
  isOperation: Boolean = false
}

input CreatePaymentInput {
  Order_ID: [String!]!
  total: Float!
  method: String!
}

input SignupUserInput {
  User_First_Name: String!
  User_Last_Name: String!
  User_Name: String!
  Email: String!
  Password: String!
  PassWordConfirm: String!
}

input LoginUserInput {
  userNameorPassword: String!
  passWord: String!
}

input ResetPasswordInput {
  New_Password: String!
  otp: String!
  User_ID: String!
}

input ActiveOtpInput {
  otp: String!
  User_ID: String!
}